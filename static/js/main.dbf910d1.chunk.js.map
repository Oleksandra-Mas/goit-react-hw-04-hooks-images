{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Loader/Loader.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.module.css","components/Loader/Loader.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","services/apiService.js","components/Button/Button.jsx","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.jsx","components/Searchbar/Searchbar.jsx","App.js","index.js"],"names":["module","exports","Spinner","className","styles","Loader","type","color","height","width","timeout","ImageGalleryItem","toggleModal","webImage","largeImage","tags","onClick","event","target","dataset","alt","url","value","src","ApiService","this","searchQuery","page","a","axios","get","response","data","newQuery","Button","apiService","STATUS","ImageGallery","filter","useState","status","setStatus","photos","setPhotos","setPage","useEffect","resetPage","searchPhoto","then","newPhotos","total","toast","warning","hits","prevPhotos","smoothScroll","setTimeout","window","scrollBy","top","document","documentElement","clientHeight","behavior","map","index","id","largeImageURL","webformatURL","incrementPage","modalRoot","querySelector","Modal","onClose","searchImage","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","Overlay","currentTarget","Searchbar","onSubmit","setFilter","preventDefault","trim","error","SearchForm","autoComplete","autoFocus","placeholder","onChange","toLowerCase","App","setSearchImage","showModal","setShowModal","prevShowModal","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dbf910d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__s54EB\",\"ImageGalleryItem-image\":\"ImageGalleryItem_ImageGalleryItem-image__2_Lba\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2zlvi\",\"Modal\":\"Modal_Modal__oJvAb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__ypQJt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__5Sk85\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3Os7T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2ytC5\",\"SearchForm\":\"Searchbar_SearchForm__1pn79\",\"SearchForm-button\":\"Searchbar_SearchForm-button__1hVVL\",\"SearchForm-button-label\":\"Searchbar_SearchForm-button-label__19I4m\",\"SearchForm-input\":\"Searchbar_SearchForm-input__1IB5D\"};","import Loader from 'react-loader-spinner';\r\nimport styles from './Loader.module.css';\r\nexport default function Spinner() {\r\n    return (\r\n        <Loader\r\n            className={styles.Loader}\r\n            type=\"BallTriangle\"\r\n            color=\"#3f51b5\"\r\n            height={100}\r\n            width={100}\r\n            timeout={10000}\r\n        />\r\n    );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport styles from './ImageGalleryItem.module.css';\r\nexport default function ImageGalleryItem({\r\n    toggleModal,\r\n    webImage,\r\n    largeImage,\r\n    tags,\r\n}) {\r\n    const handleImageClick = event => {\r\n        const { dataset, alt } = event.target;\r\n        toggleModal({\r\n            url: dataset.value,\r\n            alt,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <li className={styles.ImageGalleryItem} onClick={handleImageClick}>\r\n            <img\r\n                className={styles['ImageGalleryItem-image']}\r\n                src={webImage}\r\n                alt={tags}\r\n                data-value={largeImage}\r\n            />\r\n        </li>\r\n    );\r\n}\r\nImageGalleryItem.propTypes = {\r\n    toggleModal: PropTypes.func.isRequired,\r\n    webImage: PropTypes.string.isRequired,\r\n    largeImage: PropTypes.string.isRequired,\r\n    tags: PropTypes.string.isRequired,\r\n};\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://pixabay.com/api';\r\nconst API_KEY = '23883543-c0e8a740f16e18e27aeb57e6b';\r\nexport default class ApiService {\r\n    constructor() {\r\n        this.searchQuery = '';\r\n        this.page = 1;\r\n    }\r\n    async searchPhoto() {\r\n        const url = `${BASE_URL}/?q=${this.searchQuery}&page=${this.page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\r\n        const response = await axios.get(url);\r\n        return response.data;\r\n    }\r\n    incrementPage() {\r\n        this.page += 1;\r\n    }\r\n\r\n    resetPage() {\r\n        this.page = 1;\r\n    }\r\n\r\n    setPage(page) {\r\n        this.page = page;\r\n    }\r\n\r\n    get query() {\r\n        return this.searchQuery;\r\n    }\r\n\r\n    set query(newQuery) {\r\n        this.searchQuery = newQuery;\r\n    }\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nimport styles from './Button.module.css';\r\nfunction Button({ onClick }) {\r\n    return (\r\n        <button type=\"button\" className={styles.Button} onClick={onClick}>\r\n            Load more\r\n        </button>\r\n    );\r\n}\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\nexport default Button;\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport Spinner from '../Loader/Loader';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport styles from './ImageGallery.module.css';\r\nimport ApiService from '../../services/apiService';\r\nimport Button from '../Button/Button';\r\nconst apiService = new ApiService();\r\n\r\nconst STATUS = {\r\n    idle: 'idle',\r\n    pending: 'pending',\r\n    resolved: 'resolved',\r\n};\r\n\r\nexport default function ImageGallery({ toggleModal, filter }) {\r\n    const [status, setStatus] = useState(STATUS.idle);\r\n    const [photos, setPhotos] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    useEffect(() => {\r\n        if (!filter) {\r\n            return;\r\n        }\r\n        setStatus(STATUS.pending);\r\n        apiService.searchQuery = filter;\r\n        apiService.resetPage();\r\n        apiService.searchPhoto().then(newPhotos => {\r\n            if (newPhotos.total === 0) {\r\n                setStatus(STATUS.idle);\r\n                return toast.warning('Nothing found');\r\n            }\r\n            setPhotos(newPhotos.hits);\r\n            setStatus(STATUS.resolved);\r\n        });\r\n    }, [filter]);\r\n\r\n    useEffect(() => {\r\n        if (page === 1) {\r\n            return;\r\n        }\r\n        setStatus(STATUS.pending);\r\n\r\n        apiService.searchPhoto().then(newPhotos => {\r\n            if (newPhotos.total === 0) {\r\n                setStatus(STATUS.idle);\r\n                return toast.warning('Nothing else found');\r\n            }\r\n            setPhotos(prevPhotos => [...prevPhotos, ...newPhotos.hits]);\r\n            setStatus(STATUS.resolved);\r\n            smoothScroll();\r\n        });\r\n    }, [page]);\r\n\r\n    const onClick = () => {\r\n        apiService.incrementPage();\r\n        setPage(apiService.page);\r\n    };\r\n\r\n    const smoothScroll = () => {\r\n        setTimeout(() => {\r\n            window.scrollBy({\r\n                top: document.documentElement.clientHeight,\r\n                behavior: 'smooth',\r\n            });\r\n        }, 400);\r\n    };\r\n\r\n    if (status === STATUS.idle) {\r\n        return null;\r\n    }\r\n    if (\r\n        (status === STATUS.pending && page !== 1) ||\r\n        status === STATUS.resolved\r\n    ) {\r\n        return (\r\n            <>\r\n                <ul className={styles.ImageGallery}>\r\n                    {photos.map(\r\n                        ({ id, largeImageURL, webformatURL, tags }, index) => (\r\n                            <ImageGalleryItem\r\n                                key={index}\r\n                                webImage={webformatURL}\r\n                                largeImage={largeImageURL}\r\n                                tags={tags}\r\n                                toggleModal={toggleModal}\r\n                            />\r\n                        ),\r\n                    )}\r\n                </ul>\r\n                {status === STATUS.resolved ? (\r\n                    <Button onClick={onClick} />\r\n                ) : (\r\n                    <Spinner />\r\n                )}\r\n            </>\r\n        );\r\n    } else if (status === STATUS.pending) {\r\n        return <Spinner />;\r\n    }\r\n}\r\nImageGallery.propTypes = {\r\n    toggleModal: PropTypes.func.isRequired,\r\n    filter: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport styles from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\nexport default function Modal({ onClose, searchImage }) {\r\n    const { url, alt } = searchImage;\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    const handleKeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n            onClose(null);\r\n        }\r\n    };\r\n\r\n    const handleBackdropClick = event => {\r\n        if (event.currentTarget === event.target) {\r\n            onClose(null);\r\n        }\r\n    };\r\n\r\n    return createPortal(\r\n        <div className={styles.Overlay} onClick={handleBackdropClick}>\r\n            <div className={styles.Modal}>\r\n                <img src={url} alt={alt} />\r\n            </div>\r\n        </div>,\r\n        modalRoot,\r\n    );\r\n}\r\nModal.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    searchImage: PropTypes.shape({\r\n        url: PropTypes.string.isRequired,\r\n        alt: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n};\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\nimport styles from './Searchbar.module.css';\r\nexport default function Searchbar({ onSubmit }) {\r\n    const [filter, setFilter] = useState('');\r\n    const handleInputChange = event => {\r\n        const value = event.target.value.toLowerCase();\r\n        setFilter(value);\r\n    };\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        if (filter.trim() === '') {\r\n            return toast.error('Empty input');\r\n        }\r\n        onSubmit(filter);\r\n        setFilter('');\r\n    };\r\n    return (\r\n        <header className={styles.Searchbar}>\r\n            <form onSubmit={handleSubmit} className={styles.SearchForm}>\r\n                <button type=\"submit\" className={styles['SearchForm-button']}>\r\n                    <span className={styles['SearchForm-button-label']}>\r\n                        Search\r\n                    </span>\r\n                </button>\r\n\r\n                <input\r\n                    className={styles['SearchForm-input']}\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"Search images and photos\"\r\n                    value={filter}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n        </header>\r\n    );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport './App.css';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Modal from './components/Modal/Modal';\nimport Searchbar from './components/Searchbar/Searchbar';\nexport default function App() {\n    const [filter, setFilter] = useState('');\n    const [searchImage, setSearchImage] = useState(null);\n    const [showModal, setShowModal] = useState(false);\n\n    const toggleModal = data => {\n        setShowModal(prevShowModal => !prevShowModal);\n        setSearchImage(data);\n    };\n    return (\n        <div className=\"App\">\n            <Searchbar onSubmit={setFilter} />\n            <ImageGallery toggleModal={toggleModal} filter={filter} />\n            <ToastContainer\n                position=\"top-right\"\n                autoClose={5000}\n                hideProgressBar={false}\n                newestOnTop={false}\n                closeOnClick\n                rtl={false}\n                pauseOnFocusLoss\n                draggable\n                pauseOnHover\n            />\n            {showModal && (\n                <Modal searchImage={searchImage} onClose={toggleModal} />\n            )}\n        </div>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}